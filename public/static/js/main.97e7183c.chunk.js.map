{"version":3,"sources":["logo.png","components/PeopleItem.js","components/People.js","components/Person.js","App.js","reportWebVitals.js","index.js"],"names":["PeopleItem","person","name","mass","height","gender","homeworld","className","to","PEOPLE_QUERY","gql","People","query","loading","error","data","console","log","people","map","PERSON_QUERY","Person","props","match","params","variables","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kJAAe,G,YAAA,IAA0B,kC,wDCmB1BA,EAhBI,SAAC,GAAyD,IAAD,IAAtDC,OAAUC,EAA4C,EAA5CA,KAA4C,EAAtCC,KAAsC,EAAhCC,OAAgC,EAAxBC,OAAwB,EAAhBC,UAExD,OACI,qBAAKC,UAAU,sBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,0CAAaL,EAAb,SAEJ,qBAAKK,UAAU,WAAf,SACI,cAAC,IAAD,CAAMC,GAAE,kBAAaN,GAAQK,UAAU,oBAAvC,6BCPdE,EAAeC,cAAH,4LAoCHC,EAxBA,WACX,OACI,qCACI,oBAAIJ,UAAU,iBAAd,oBACA,cAAC,IAAD,CAAOK,MAAOH,EAAd,SAEQ,YAA6B,IAA3BI,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACd,OAAIF,EAAgB,6CAChBC,GAAOE,QAAQC,IAAIH,GAEhB,mCAECC,EAAKG,OAAOC,KAAI,SAAAlB,GAAM,OAClB,cAAC,EAAD,CAA8BA,OAAQA,GAArBA,EAAOC,mBCzBtDkB,EAAeV,cAAH,yNA2DHW,EA/CA,SAACC,GACZ,IAAMpB,EAAOoB,EAAMC,MAAMC,OAAOtB,KAChC,OACI,mCACI,cAAC,IAAD,CAAOU,MAAOQ,EAAcK,UAAW,CAACvB,QAAxC,SAEQ,YAA8B,IAA3BW,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACf,GAAIF,EAAS,OAAO,4CAChBC,GAAOE,QAAQC,IAAIH,GAFE,MASrBC,EAAKd,OAAO,GALRC,EAJiB,EAIjBA,KACJE,EALqB,EAKrBA,OACAD,EANqB,EAMrBA,KACAE,EAPqB,EAOrBA,OACAC,EARqB,EAQrBA,UAGJ,OAAO,gCACH,qBAAIC,UAAU,iBAAd,UAA+B,sBAAMA,UAAU,YAAhB,sBAA4CL,KAC3E,oBAAIK,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACI,qBAAIA,UAAU,kBAAd,UACA,4CAAwBL,KAExB,qBAAIK,UAAU,kBAAd,UACA,8CAA0BH,KAE1B,qBAAIG,UAAU,kBAAd,UACA,4CAAwBJ,KAExB,qBAAII,UAAU,kBAAd,UACA,8CAA0BF,KAE1B,qBAAIE,UAAU,kBAAd,UACA,iDAA6BD,QAGjC,uBACA,cAAC,IAAD,CAAME,GAAG,IAAID,UAAU,oBAAvB,2B,QC/CtBmB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAqBQC,MAlBf,WACE,OACE,cAAC,IAAD,CAAgBH,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,sBAAKnB,UAAU,YAAf,UACE,qBACEuB,IAAKC,EACLC,IAAI,YACJC,MAAO,CAAEC,MAAO,IAAKC,QAAS,QAASC,OAAQ,UAEjD,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,gBAAgBC,UAAWlB,YCXxCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.97e7183c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.87dc8524.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PeopleItem = ({ person: { name, mass, height, gender, homeworld}}) => {\r\n\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Person: {name} </h4>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/person/${name}`} className=\"btn btn-secondary\">Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleItem\r\n","import React from 'react';\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from 'react-apollo';\r\nimport PeopleItem from './PeopleItem';\r\n\r\nconst PEOPLE_QUERY = gql`\r\n    query PeopleQuery {\r\n        people {\r\n            name\r\n            mass\r\n            gender\r\n            height\r\n            homeworld\r\n        }\r\n    }\r\n`;\r\n\r\nconst People = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"display-4 my-3\">People</h1>\r\n            <Query query={PEOPLE_QUERY}>\r\n                {\r\n                    ({loading, error, data}) => {\r\n                        if (loading) return <h4>Loading...</h4>;\r\n                        if (error) console.log(error);\r\n\r\n                        return <>\r\n                            {\r\n                                data.people.map(person => (\r\n                                    <PeopleItem key={person.name} person={person} />\r\n                                ))\r\n                            }\r\n                        </>;\r\n                    }\r\n                }\r\n            </Query>    \r\n        </>\r\n    )\r\n};\r\n\r\nexport default People;\r\n","import React from 'react'\r\nimport { gql } from '@apollo/client';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PERSON_QUERY = gql`\r\n    query PersonQuery($name: String!) {\r\n        person(name: $name) {\r\n            name\r\n            height\r\n            mass\r\n            gender\r\n            homeworld\r\n        }\r\n    }\r\n`;\r\n\r\nconst Person = (props) => {\r\n    const name = props.match.params.name;\r\n    return (\r\n        <>\r\n            <Query query={PERSON_QUERY} variables={{name}}>\r\n                {\r\n                    ({ loading, error, data}) => {\r\n                        if (loading) return <h4>Loading...</h4>;\r\n                        if (error) console.log(error);\r\n\r\n                        const { name, \r\n                            height,\r\n                            mass,\r\n                            gender,\r\n                            homeworld\r\n                        } = data.person[0]\r\n                        \r\n                        return <div>\r\n                            <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Person: </span>{name}</h1>\r\n                            <h4 className=\"mb-3\">Person Details</h4>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">\r\n                                <strong>Name: </strong>{name}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                <strong>Height: </strong>{height}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                <strong>Mass: </strong>{mass}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                <strong>Gender: </strong>{gender}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                <strong>Homeworld: </strong>{homeworld}\r\n                                </li>\r\n                            </ul>\r\n                            <hr />\r\n                            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n                        </div>;\r\n                    }\r\n                }\r\n            </Query>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import './App.css';\nimport logo from './logo.png'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport People from './components/People';\nimport Person from './components/Person';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img \n            src={logo}\n            alt=\"Star Wars\"\n            style={{ width: 300, display: 'block', margin: 'auto'}}\n          />\n          <Route exact path=\"/\" component={People} />\n          <Route exact path=\"/person/:name\" component={Person} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}